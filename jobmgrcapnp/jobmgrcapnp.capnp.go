// Code generated by capnpc-go. DO NOT EDIT.

package jobmgrcapnp

import (
	capnp "capnproto.org/go/capnp/v3"
	text "capnproto.org/go/capnp/v3/encoding/text"
	fc "capnproto.org/go/capnp/v3/flowcontrol"
	schemas "capnproto.org/go/capnp/v3/schemas"
	server "capnproto.org/go/capnp/v3/server"
	context "context"
)

type Status uint16

// Status_TypeID is the unique identifier for the type Status.
const Status_TypeID = 0xd50c63d1b6357bcc

// Values of Status.
const (
	Status_submit  Status = 0
	Status_exec    Status = 1
	Status_error   Status = 2
	Status_success Status = 3
	Status_cancel  Status = 4
)

// String returns the enum's constant name.
func (c Status) String() string {
	switch c {
	case Status_submit:
		return "submit"
	case Status_exec:
		return "exec"
	case Status_error:
		return "error"
	case Status_success:
		return "success"
	case Status_cancel:
		return "cancel"

	default:
		return ""
	}
}

// StatusFromString returns the enum value with a name,
// or the zero value if there's no such value.
func StatusFromString(c string) Status {
	switch c {
	case "submit":
		return Status_submit
	case "exec":
		return Status_exec
	case "error":
		return Status_error
	case "success":
		return Status_success
	case "cancel":
		return Status_cancel

	default:
		return 0
	}
}

type Status_List = capnp.EnumList[Status]

func NewStatus_List(s *capnp.Segment, sz int32) (Status_List, error) {
	return capnp.NewEnumList[Status](s, sz)
}

type JobCallback capnp.Client

// JobCallback_TypeID is the unique identifier for the type JobCallback.
const JobCallback_TypeID = 0xfc059c3f3d95cc04

func (c JobCallback) InitialUpdateJobInfo(ctx context.Context, params func(JobCallback_initialUpdateJobInfo_Params) error) (JobCallback_initialUpdateJobInfo_Results_Future, capnp.ReleaseFunc) {

	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xfc059c3f3d95cc04,
			MethodID:      0,
			InterfaceName: "jobmgrcapnp.capnp:JobCallback",
			MethodName:    "initialUpdateJobInfo",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 3}
		s.PlaceArgs = func(s capnp.Struct) error { return params(JobCallback_initialUpdateJobInfo_Params(s)) }
	}

	ans, release := capnp.Client(c).SendCall(ctx, s)
	return JobCallback_initialUpdateJobInfo_Results_Future{Future: ans.Future()}, release

}

func (c JobCallback) UpdateJobLog(ctx context.Context, params func(JobCallback_updateJobLog_Params) error) (JobCallback_updateJobLog_Results_Future, capnp.ReleaseFunc) {

	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xfc059c3f3d95cc04,
			MethodID:      1,
			InterfaceName: "jobmgrcapnp.capnp:JobCallback",
			MethodName:    "updateJobLog",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(JobCallback_updateJobLog_Params(s)) }
	}

	ans, release := capnp.Client(c).SendCall(ctx, s)
	return JobCallback_updateJobLog_Results_Future{Future: ans.Future()}, release

}

func (c JobCallback) UpdateStatus(ctx context.Context, params func(JobCallback_updateStatus_Params) error) (JobCallback_updateStatus_Results_Future, capnp.ReleaseFunc) {

	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xfc059c3f3d95cc04,
			MethodID:      2,
			InterfaceName: "jobmgrcapnp.capnp:JobCallback",
			MethodName:    "updateStatus",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(JobCallback_updateStatus_Params(s)) }
	}

	ans, release := capnp.Client(c).SendCall(ctx, s)
	return JobCallback_updateStatus_Results_Future{Future: ans.Future()}, release

}

func (c JobCallback) JobSuccessful(ctx context.Context, params func(JobCallback_jobSuccessful_Params) error) (JobCallback_jobSuccessful_Results_Future, capnp.ReleaseFunc) {

	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xfc059c3f3d95cc04,
			MethodID:      3,
			InterfaceName: "jobmgrcapnp.capnp:JobCallback",
			MethodName:    "jobSuccessful",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(JobCallback_jobSuccessful_Params(s)) }
	}

	ans, release := capnp.Client(c).SendCall(ctx, s)
	return JobCallback_jobSuccessful_Results_Future{Future: ans.Future()}, release

}

func (c JobCallback) JobFailed(ctx context.Context, params func(JobCallback_jobFailed_Params) error) (JobCallback_jobFailed_Results_Future, capnp.ReleaseFunc) {

	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xfc059c3f3d95cc04,
			MethodID:      4,
			InterfaceName: "jobmgrcapnp.capnp:JobCallback",
			MethodName:    "jobFailed",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(JobCallback_jobFailed_Params(s)) }
	}

	ans, release := capnp.Client(c).SendCall(ctx, s)
	return JobCallback_jobFailed_Results_Future{Future: ans.Future()}, release

}

func (c JobCallback) JobCancelled(ctx context.Context, params func(JobCallback_jobCancelled_Params) error) (JobCallback_jobCancelled_Results_Future, capnp.ReleaseFunc) {

	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xfc059c3f3d95cc04,
			MethodID:      5,
			InterfaceName: "jobmgrcapnp.capnp:JobCallback",
			MethodName:    "jobCancelled",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(JobCallback_jobCancelled_Params(s)) }
	}

	ans, release := capnp.Client(c).SendCall(ctx, s)
	return JobCallback_jobCancelled_Results_Future{Future: ans.Future()}, release

}

func (c JobCallback) WaitStreaming() error {
	return capnp.Client(c).WaitStreaming()
}

// String returns a string that identifies this capability for debugging
// purposes.  Its format should not be depended on: in particular, it
// should not be used to compare clients.  Use IsSame to compare clients
// for equality.
func (c JobCallback) String() string {
	return "JobCallback(" + capnp.Client(c).String() + ")"
}

// AddRef creates a new Client that refers to the same capability as c.
// If c is nil or has resolved to null, then AddRef returns nil.
func (c JobCallback) AddRef() JobCallback {
	return JobCallback(capnp.Client(c).AddRef())
}

// Release releases a capability reference.  If this is the last
// reference to the capability, then the underlying resources associated
// with the capability will be released.
//
// Release will panic if c has already been released, but not if c is
// nil or resolved to null.
func (c JobCallback) Release() {
	capnp.Client(c).Release()
}

// Resolve blocks until the capability is fully resolved or the Context
// expires.
func (c JobCallback) Resolve(ctx context.Context) error {
	return capnp.Client(c).Resolve(ctx)
}

func (c JobCallback) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Client(c).EncodeAsPtr(seg)
}

func (JobCallback) DecodeFromPtr(p capnp.Ptr) JobCallback {
	return JobCallback(capnp.Client{}.DecodeFromPtr(p))
}

// IsValid reports whether c is a valid reference to a capability.
// A reference is invalid if it is nil, has resolved to null, or has
// been released.
func (c JobCallback) IsValid() bool {
	return capnp.Client(c).IsValid()
}

// IsSame reports whether c and other refer to a capability created by the
// same call to NewClient.  This can return false negatives if c or other
// are not fully resolved: use Resolve if this is an issue.  If either
// c or other are released, then IsSame panics.
func (c JobCallback) IsSame(other JobCallback) bool {
	return capnp.Client(c).IsSame(capnp.Client(other))
}

// Update the flowcontrol.FlowLimiter used to manage flow control for
// this client. This affects all future calls, but not calls already
// waiting to send. Passing nil sets the value to flowcontrol.NopLimiter,
// which is also the default.
func (c JobCallback) SetFlowLimiter(lim fc.FlowLimiter) {
	capnp.Client(c).SetFlowLimiter(lim)
}

// Get the current flowcontrol.FlowLimiter used to manage flow control
// for this client.
func (c JobCallback) GetFlowLimiter() fc.FlowLimiter {
	return capnp.Client(c).GetFlowLimiter()
}

// A JobCallback_Server is a JobCallback with a local implementation.
type JobCallback_Server interface {
	InitialUpdateJobInfo(context.Context, JobCallback_initialUpdateJobInfo) error

	UpdateJobLog(context.Context, JobCallback_updateJobLog) error

	UpdateStatus(context.Context, JobCallback_updateStatus) error

	JobSuccessful(context.Context, JobCallback_jobSuccessful) error

	JobFailed(context.Context, JobCallback_jobFailed) error

	JobCancelled(context.Context, JobCallback_jobCancelled) error
}

// JobCallback_NewServer creates a new Server from an implementation of JobCallback_Server.
func JobCallback_NewServer(s JobCallback_Server) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(JobCallback_Methods(nil, s), s, c)
}

// JobCallback_ServerToClient creates a new Client from an implementation of JobCallback_Server.
// The caller is responsible for calling Release on the returned Client.
func JobCallback_ServerToClient(s JobCallback_Server) JobCallback {
	return JobCallback(capnp.NewClient(JobCallback_NewServer(s)))
}

// JobCallback_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func JobCallback_Methods(methods []server.Method, s JobCallback_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 6)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfc059c3f3d95cc04,
			MethodID:      0,
			InterfaceName: "jobmgrcapnp.capnp:JobCallback",
			MethodName:    "initialUpdateJobInfo",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.InitialUpdateJobInfo(ctx, JobCallback_initialUpdateJobInfo{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfc059c3f3d95cc04,
			MethodID:      1,
			InterfaceName: "jobmgrcapnp.capnp:JobCallback",
			MethodName:    "updateJobLog",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.UpdateJobLog(ctx, JobCallback_updateJobLog{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfc059c3f3d95cc04,
			MethodID:      2,
			InterfaceName: "jobmgrcapnp.capnp:JobCallback",
			MethodName:    "updateStatus",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.UpdateStatus(ctx, JobCallback_updateStatus{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfc059c3f3d95cc04,
			MethodID:      3,
			InterfaceName: "jobmgrcapnp.capnp:JobCallback",
			MethodName:    "jobSuccessful",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.JobSuccessful(ctx, JobCallback_jobSuccessful{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfc059c3f3d95cc04,
			MethodID:      4,
			InterfaceName: "jobmgrcapnp.capnp:JobCallback",
			MethodName:    "jobFailed",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.JobFailed(ctx, JobCallback_jobFailed{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfc059c3f3d95cc04,
			MethodID:      5,
			InterfaceName: "jobmgrcapnp.capnp:JobCallback",
			MethodName:    "jobCancelled",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.JobCancelled(ctx, JobCallback_jobCancelled{call})
		},
	})

	return methods
}

// JobCallback_initialUpdateJobInfo holds the state for a server call to JobCallback.initialUpdateJobInfo.
// See server.Call for documentation.
type JobCallback_initialUpdateJobInfo struct {
	*server.Call
}

// Args returns the call's arguments.
func (c JobCallback_initialUpdateJobInfo) Args() JobCallback_initialUpdateJobInfo_Params {
	return JobCallback_initialUpdateJobInfo_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c JobCallback_initialUpdateJobInfo) AllocResults() (JobCallback_initialUpdateJobInfo_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return JobCallback_initialUpdateJobInfo_Results(r), err
}

// JobCallback_updateJobLog holds the state for a server call to JobCallback.updateJobLog.
// See server.Call for documentation.
type JobCallback_updateJobLog struct {
	*server.Call
}

// Args returns the call's arguments.
func (c JobCallback_updateJobLog) Args() JobCallback_updateJobLog_Params {
	return JobCallback_updateJobLog_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c JobCallback_updateJobLog) AllocResults() (JobCallback_updateJobLog_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return JobCallback_updateJobLog_Results(r), err
}

// JobCallback_updateStatus holds the state for a server call to JobCallback.updateStatus.
// See server.Call for documentation.
type JobCallback_updateStatus struct {
	*server.Call
}

// Args returns the call's arguments.
func (c JobCallback_updateStatus) Args() JobCallback_updateStatus_Params {
	return JobCallback_updateStatus_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c JobCallback_updateStatus) AllocResults() (JobCallback_updateStatus_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return JobCallback_updateStatus_Results(r), err
}

// JobCallback_jobSuccessful holds the state for a server call to JobCallback.jobSuccessful.
// See server.Call for documentation.
type JobCallback_jobSuccessful struct {
	*server.Call
}

// Args returns the call's arguments.
func (c JobCallback_jobSuccessful) Args() JobCallback_jobSuccessful_Params {
	return JobCallback_jobSuccessful_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c JobCallback_jobSuccessful) AllocResults() (JobCallback_jobSuccessful_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return JobCallback_jobSuccessful_Results(r), err
}

// JobCallback_jobFailed holds the state for a server call to JobCallback.jobFailed.
// See server.Call for documentation.
type JobCallback_jobFailed struct {
	*server.Call
}

// Args returns the call's arguments.
func (c JobCallback_jobFailed) Args() JobCallback_jobFailed_Params {
	return JobCallback_jobFailed_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c JobCallback_jobFailed) AllocResults() (JobCallback_jobFailed_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return JobCallback_jobFailed_Results(r), err
}

// JobCallback_jobCancelled holds the state for a server call to JobCallback.jobCancelled.
// See server.Call for documentation.
type JobCallback_jobCancelled struct {
	*server.Call
}

// Args returns the call's arguments.
func (c JobCallback_jobCancelled) Args() JobCallback_jobCancelled_Params {
	return JobCallback_jobCancelled_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c JobCallback_jobCancelled) AllocResults() (JobCallback_jobCancelled_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return JobCallback_jobCancelled_Results(r), err
}

// JobCallback_List is a list of JobCallback.
type JobCallback_List = capnp.CapList[JobCallback]

// NewJobCallback_List creates a new list of JobCallback.
func NewJobCallback_List(s *capnp.Segment, sz int32) (JobCallback_List, error) {
	l, err := capnp.NewPointerList(s, sz)
	return capnp.CapList[JobCallback](l), err
}

type JobCallback_initialUpdateJobInfo_Params capnp.Struct

// JobCallback_initialUpdateJobInfo_Params_TypeID is the unique identifier for the type JobCallback_initialUpdateJobInfo_Params.
const JobCallback_initialUpdateJobInfo_Params_TypeID = 0xaa0ee165a52f6470

func NewJobCallback_initialUpdateJobInfo_Params(s *capnp.Segment) (JobCallback_initialUpdateJobInfo_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return JobCallback_initialUpdateJobInfo_Params(st), err
}

func NewRootJobCallback_initialUpdateJobInfo_Params(s *capnp.Segment) (JobCallback_initialUpdateJobInfo_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return JobCallback_initialUpdateJobInfo_Params(st), err
}

func ReadRootJobCallback_initialUpdateJobInfo_Params(msg *capnp.Message) (JobCallback_initialUpdateJobInfo_Params, error) {
	root, err := msg.Root()
	return JobCallback_initialUpdateJobInfo_Params(root.Struct()), err
}

func (s JobCallback_initialUpdateJobInfo_Params) String() string {
	str, _ := text.Marshal(0xaa0ee165a52f6470, capnp.Struct(s))
	return str
}

func (s JobCallback_initialUpdateJobInfo_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (JobCallback_initialUpdateJobInfo_Params) DecodeFromPtr(p capnp.Ptr) JobCallback_initialUpdateJobInfo_Params {
	return JobCallback_initialUpdateJobInfo_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s JobCallback_initialUpdateJobInfo_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s JobCallback_initialUpdateJobInfo_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s JobCallback_initialUpdateJobInfo_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s JobCallback_initialUpdateJobInfo_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s JobCallback_initialUpdateJobInfo_Params) Jobname() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s JobCallback_initialUpdateJobInfo_Params) HasJobname() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s JobCallback_initialUpdateJobInfo_Params) JobnameBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s JobCallback_initialUpdateJobInfo_Params) SetJobname(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s JobCallback_initialUpdateJobInfo_Params) JobId() (string, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.Text(), err
}

func (s JobCallback_initialUpdateJobInfo_Params) HasJobId() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s JobCallback_initialUpdateJobInfo_Params) JobIdBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.TextBytes(), err
}

func (s JobCallback_initialUpdateJobInfo_Params) SetJobId(v string) error {
	return capnp.Struct(s).SetText(1, v)
}

func (s JobCallback_initialUpdateJobInfo_Params) Process() (string, error) {
	p, err := capnp.Struct(s).Ptr(2)
	return p.Text(), err
}

func (s JobCallback_initialUpdateJobInfo_Params) HasProcess() bool {
	return capnp.Struct(s).HasPtr(2)
}

func (s JobCallback_initialUpdateJobInfo_Params) ProcessBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(2)
	return p.TextBytes(), err
}

func (s JobCallback_initialUpdateJobInfo_Params) SetProcess(v string) error {
	return capnp.Struct(s).SetText(2, v)
}

// JobCallback_initialUpdateJobInfo_Params_List is a list of JobCallback_initialUpdateJobInfo_Params.
type JobCallback_initialUpdateJobInfo_Params_List = capnp.StructList[JobCallback_initialUpdateJobInfo_Params]

// NewJobCallback_initialUpdateJobInfo_Params creates a new list of JobCallback_initialUpdateJobInfo_Params.
func NewJobCallback_initialUpdateJobInfo_Params_List(s *capnp.Segment, sz int32) (JobCallback_initialUpdateJobInfo_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3}, sz)
	return capnp.StructList[JobCallback_initialUpdateJobInfo_Params](l), err
}

// JobCallback_initialUpdateJobInfo_Params_Future is a wrapper for a JobCallback_initialUpdateJobInfo_Params promised by a client call.
type JobCallback_initialUpdateJobInfo_Params_Future struct{ *capnp.Future }

func (f JobCallback_initialUpdateJobInfo_Params_Future) Struct() (JobCallback_initialUpdateJobInfo_Params, error) {
	p, err := f.Future.Ptr()
	return JobCallback_initialUpdateJobInfo_Params(p.Struct()), err
}

type JobCallback_initialUpdateJobInfo_Results capnp.Struct

// JobCallback_initialUpdateJobInfo_Results_TypeID is the unique identifier for the type JobCallback_initialUpdateJobInfo_Results.
const JobCallback_initialUpdateJobInfo_Results_TypeID = 0xf997d7817d5e8d4e

func NewJobCallback_initialUpdateJobInfo_Results(s *capnp.Segment) (JobCallback_initialUpdateJobInfo_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return JobCallback_initialUpdateJobInfo_Results(st), err
}

func NewRootJobCallback_initialUpdateJobInfo_Results(s *capnp.Segment) (JobCallback_initialUpdateJobInfo_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return JobCallback_initialUpdateJobInfo_Results(st), err
}

func ReadRootJobCallback_initialUpdateJobInfo_Results(msg *capnp.Message) (JobCallback_initialUpdateJobInfo_Results, error) {
	root, err := msg.Root()
	return JobCallback_initialUpdateJobInfo_Results(root.Struct()), err
}

func (s JobCallback_initialUpdateJobInfo_Results) String() string {
	str, _ := text.Marshal(0xf997d7817d5e8d4e, capnp.Struct(s))
	return str
}

func (s JobCallback_initialUpdateJobInfo_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (JobCallback_initialUpdateJobInfo_Results) DecodeFromPtr(p capnp.Ptr) JobCallback_initialUpdateJobInfo_Results {
	return JobCallback_initialUpdateJobInfo_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s JobCallback_initialUpdateJobInfo_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s JobCallback_initialUpdateJobInfo_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s JobCallback_initialUpdateJobInfo_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s JobCallback_initialUpdateJobInfo_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// JobCallback_initialUpdateJobInfo_Results_List is a list of JobCallback_initialUpdateJobInfo_Results.
type JobCallback_initialUpdateJobInfo_Results_List = capnp.StructList[JobCallback_initialUpdateJobInfo_Results]

// NewJobCallback_initialUpdateJobInfo_Results creates a new list of JobCallback_initialUpdateJobInfo_Results.
func NewJobCallback_initialUpdateJobInfo_Results_List(s *capnp.Segment, sz int32) (JobCallback_initialUpdateJobInfo_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[JobCallback_initialUpdateJobInfo_Results](l), err
}

// JobCallback_initialUpdateJobInfo_Results_Future is a wrapper for a JobCallback_initialUpdateJobInfo_Results promised by a client call.
type JobCallback_initialUpdateJobInfo_Results_Future struct{ *capnp.Future }

func (f JobCallback_initialUpdateJobInfo_Results_Future) Struct() (JobCallback_initialUpdateJobInfo_Results, error) {
	p, err := f.Future.Ptr()
	return JobCallback_initialUpdateJobInfo_Results(p.Struct()), err
}

type JobCallback_updateJobLog_Params capnp.Struct

// JobCallback_updateJobLog_Params_TypeID is the unique identifier for the type JobCallback_updateJobLog_Params.
const JobCallback_updateJobLog_Params_TypeID = 0x8bad13242cde8e8d

func NewJobCallback_updateJobLog_Params(s *capnp.Segment) (JobCallback_updateJobLog_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return JobCallback_updateJobLog_Params(st), err
}

func NewRootJobCallback_updateJobLog_Params(s *capnp.Segment) (JobCallback_updateJobLog_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return JobCallback_updateJobLog_Params(st), err
}

func ReadRootJobCallback_updateJobLog_Params(msg *capnp.Message) (JobCallback_updateJobLog_Params, error) {
	root, err := msg.Root()
	return JobCallback_updateJobLog_Params(root.Struct()), err
}

func (s JobCallback_updateJobLog_Params) String() string {
	str, _ := text.Marshal(0x8bad13242cde8e8d, capnp.Struct(s))
	return str
}

func (s JobCallback_updateJobLog_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (JobCallback_updateJobLog_Params) DecodeFromPtr(p capnp.Ptr) JobCallback_updateJobLog_Params {
	return JobCallback_updateJobLog_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s JobCallback_updateJobLog_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s JobCallback_updateJobLog_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s JobCallback_updateJobLog_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s JobCallback_updateJobLog_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s JobCallback_updateJobLog_Params) LogMsg() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s JobCallback_updateJobLog_Params) HasLogMsg() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s JobCallback_updateJobLog_Params) LogMsgBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s JobCallback_updateJobLog_Params) SetLogMsg(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

// JobCallback_updateJobLog_Params_List is a list of JobCallback_updateJobLog_Params.
type JobCallback_updateJobLog_Params_List = capnp.StructList[JobCallback_updateJobLog_Params]

// NewJobCallback_updateJobLog_Params creates a new list of JobCallback_updateJobLog_Params.
func NewJobCallback_updateJobLog_Params_List(s *capnp.Segment, sz int32) (JobCallback_updateJobLog_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[JobCallback_updateJobLog_Params](l), err
}

// JobCallback_updateJobLog_Params_Future is a wrapper for a JobCallback_updateJobLog_Params promised by a client call.
type JobCallback_updateJobLog_Params_Future struct{ *capnp.Future }

func (f JobCallback_updateJobLog_Params_Future) Struct() (JobCallback_updateJobLog_Params, error) {
	p, err := f.Future.Ptr()
	return JobCallback_updateJobLog_Params(p.Struct()), err
}

type JobCallback_updateJobLog_Results capnp.Struct

// JobCallback_updateJobLog_Results_TypeID is the unique identifier for the type JobCallback_updateJobLog_Results.
const JobCallback_updateJobLog_Results_TypeID = 0x9b9e780efafe194e

func NewJobCallback_updateJobLog_Results(s *capnp.Segment) (JobCallback_updateJobLog_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return JobCallback_updateJobLog_Results(st), err
}

func NewRootJobCallback_updateJobLog_Results(s *capnp.Segment) (JobCallback_updateJobLog_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return JobCallback_updateJobLog_Results(st), err
}

func ReadRootJobCallback_updateJobLog_Results(msg *capnp.Message) (JobCallback_updateJobLog_Results, error) {
	root, err := msg.Root()
	return JobCallback_updateJobLog_Results(root.Struct()), err
}

func (s JobCallback_updateJobLog_Results) String() string {
	str, _ := text.Marshal(0x9b9e780efafe194e, capnp.Struct(s))
	return str
}

func (s JobCallback_updateJobLog_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (JobCallback_updateJobLog_Results) DecodeFromPtr(p capnp.Ptr) JobCallback_updateJobLog_Results {
	return JobCallback_updateJobLog_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s JobCallback_updateJobLog_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s JobCallback_updateJobLog_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s JobCallback_updateJobLog_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s JobCallback_updateJobLog_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// JobCallback_updateJobLog_Results_List is a list of JobCallback_updateJobLog_Results.
type JobCallback_updateJobLog_Results_List = capnp.StructList[JobCallback_updateJobLog_Results]

// NewJobCallback_updateJobLog_Results creates a new list of JobCallback_updateJobLog_Results.
func NewJobCallback_updateJobLog_Results_List(s *capnp.Segment, sz int32) (JobCallback_updateJobLog_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[JobCallback_updateJobLog_Results](l), err
}

// JobCallback_updateJobLog_Results_Future is a wrapper for a JobCallback_updateJobLog_Results promised by a client call.
type JobCallback_updateJobLog_Results_Future struct{ *capnp.Future }

func (f JobCallback_updateJobLog_Results_Future) Struct() (JobCallback_updateJobLog_Results, error) {
	p, err := f.Future.Ptr()
	return JobCallback_updateJobLog_Results(p.Struct()), err
}

type JobCallback_updateStatus_Params capnp.Struct

// JobCallback_updateStatus_Params_TypeID is the unique identifier for the type JobCallback_updateStatus_Params.
const JobCallback_updateStatus_Params_TypeID = 0xdb89eb8468ea99dc

func NewJobCallback_updateStatus_Params(s *capnp.Segment) (JobCallback_updateStatus_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return JobCallback_updateStatus_Params(st), err
}

func NewRootJobCallback_updateStatus_Params(s *capnp.Segment) (JobCallback_updateStatus_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return JobCallback_updateStatus_Params(st), err
}

func ReadRootJobCallback_updateStatus_Params(msg *capnp.Message) (JobCallback_updateStatus_Params, error) {
	root, err := msg.Root()
	return JobCallback_updateStatus_Params(root.Struct()), err
}

func (s JobCallback_updateStatus_Params) String() string {
	str, _ := text.Marshal(0xdb89eb8468ea99dc, capnp.Struct(s))
	return str
}

func (s JobCallback_updateStatus_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (JobCallback_updateStatus_Params) DecodeFromPtr(p capnp.Ptr) JobCallback_updateStatus_Params {
	return JobCallback_updateStatus_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s JobCallback_updateStatus_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s JobCallback_updateStatus_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s JobCallback_updateStatus_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s JobCallback_updateStatus_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s JobCallback_updateStatus_Params) Status() Status {
	return Status(capnp.Struct(s).Uint16(0))
}

func (s JobCallback_updateStatus_Params) SetStatus(v Status) {
	capnp.Struct(s).SetUint16(0, uint16(v))
}

// JobCallback_updateStatus_Params_List is a list of JobCallback_updateStatus_Params.
type JobCallback_updateStatus_Params_List = capnp.StructList[JobCallback_updateStatus_Params]

// NewJobCallback_updateStatus_Params creates a new list of JobCallback_updateStatus_Params.
func NewJobCallback_updateStatus_Params_List(s *capnp.Segment, sz int32) (JobCallback_updateStatus_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return capnp.StructList[JobCallback_updateStatus_Params](l), err
}

// JobCallback_updateStatus_Params_Future is a wrapper for a JobCallback_updateStatus_Params promised by a client call.
type JobCallback_updateStatus_Params_Future struct{ *capnp.Future }

func (f JobCallback_updateStatus_Params_Future) Struct() (JobCallback_updateStatus_Params, error) {
	p, err := f.Future.Ptr()
	return JobCallback_updateStatus_Params(p.Struct()), err
}

type JobCallback_updateStatus_Results capnp.Struct

// JobCallback_updateStatus_Results_TypeID is the unique identifier for the type JobCallback_updateStatus_Results.
const JobCallback_updateStatus_Results_TypeID = 0xe5f8361c6b6e4977

func NewJobCallback_updateStatus_Results(s *capnp.Segment) (JobCallback_updateStatus_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return JobCallback_updateStatus_Results(st), err
}

func NewRootJobCallback_updateStatus_Results(s *capnp.Segment) (JobCallback_updateStatus_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return JobCallback_updateStatus_Results(st), err
}

func ReadRootJobCallback_updateStatus_Results(msg *capnp.Message) (JobCallback_updateStatus_Results, error) {
	root, err := msg.Root()
	return JobCallback_updateStatus_Results(root.Struct()), err
}

func (s JobCallback_updateStatus_Results) String() string {
	str, _ := text.Marshal(0xe5f8361c6b6e4977, capnp.Struct(s))
	return str
}

func (s JobCallback_updateStatus_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (JobCallback_updateStatus_Results) DecodeFromPtr(p capnp.Ptr) JobCallback_updateStatus_Results {
	return JobCallback_updateStatus_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s JobCallback_updateStatus_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s JobCallback_updateStatus_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s JobCallback_updateStatus_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s JobCallback_updateStatus_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// JobCallback_updateStatus_Results_List is a list of JobCallback_updateStatus_Results.
type JobCallback_updateStatus_Results_List = capnp.StructList[JobCallback_updateStatus_Results]

// NewJobCallback_updateStatus_Results creates a new list of JobCallback_updateStatus_Results.
func NewJobCallback_updateStatus_Results_List(s *capnp.Segment, sz int32) (JobCallback_updateStatus_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[JobCallback_updateStatus_Results](l), err
}

// JobCallback_updateStatus_Results_Future is a wrapper for a JobCallback_updateStatus_Results promised by a client call.
type JobCallback_updateStatus_Results_Future struct{ *capnp.Future }

func (f JobCallback_updateStatus_Results_Future) Struct() (JobCallback_updateStatus_Results, error) {
	p, err := f.Future.Ptr()
	return JobCallback_updateStatus_Results(p.Struct()), err
}

type JobCallback_jobSuccessful_Params capnp.Struct

// JobCallback_jobSuccessful_Params_TypeID is the unique identifier for the type JobCallback_jobSuccessful_Params.
const JobCallback_jobSuccessful_Params_TypeID = 0xc93be09c845920bb

func NewJobCallback_jobSuccessful_Params(s *capnp.Segment) (JobCallback_jobSuccessful_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return JobCallback_jobSuccessful_Params(st), err
}

func NewRootJobCallback_jobSuccessful_Params(s *capnp.Segment) (JobCallback_jobSuccessful_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return JobCallback_jobSuccessful_Params(st), err
}

func ReadRootJobCallback_jobSuccessful_Params(msg *capnp.Message) (JobCallback_jobSuccessful_Params, error) {
	root, err := msg.Root()
	return JobCallback_jobSuccessful_Params(root.Struct()), err
}

func (s JobCallback_jobSuccessful_Params) String() string {
	str, _ := text.Marshal(0xc93be09c845920bb, capnp.Struct(s))
	return str
}

func (s JobCallback_jobSuccessful_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (JobCallback_jobSuccessful_Params) DecodeFromPtr(p capnp.Ptr) JobCallback_jobSuccessful_Params {
	return JobCallback_jobSuccessful_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s JobCallback_jobSuccessful_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s JobCallback_jobSuccessful_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s JobCallback_jobSuccessful_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s JobCallback_jobSuccessful_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s JobCallback_jobSuccessful_Params) LogMsg() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s JobCallback_jobSuccessful_Params) HasLogMsg() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s JobCallback_jobSuccessful_Params) LogMsgBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s JobCallback_jobSuccessful_Params) SetLogMsg(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s JobCallback_jobSuccessful_Params) Status() Status {
	return Status(capnp.Struct(s).Uint16(0))
}

func (s JobCallback_jobSuccessful_Params) SetStatus(v Status) {
	capnp.Struct(s).SetUint16(0, uint16(v))
}

// JobCallback_jobSuccessful_Params_List is a list of JobCallback_jobSuccessful_Params.
type JobCallback_jobSuccessful_Params_List = capnp.StructList[JobCallback_jobSuccessful_Params]

// NewJobCallback_jobSuccessful_Params creates a new list of JobCallback_jobSuccessful_Params.
func NewJobCallback_jobSuccessful_Params_List(s *capnp.Segment, sz int32) (JobCallback_jobSuccessful_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return capnp.StructList[JobCallback_jobSuccessful_Params](l), err
}

// JobCallback_jobSuccessful_Params_Future is a wrapper for a JobCallback_jobSuccessful_Params promised by a client call.
type JobCallback_jobSuccessful_Params_Future struct{ *capnp.Future }

func (f JobCallback_jobSuccessful_Params_Future) Struct() (JobCallback_jobSuccessful_Params, error) {
	p, err := f.Future.Ptr()
	return JobCallback_jobSuccessful_Params(p.Struct()), err
}

type JobCallback_jobSuccessful_Results capnp.Struct

// JobCallback_jobSuccessful_Results_TypeID is the unique identifier for the type JobCallback_jobSuccessful_Results.
const JobCallback_jobSuccessful_Results_TypeID = 0xfa5237658bb0489b

func NewJobCallback_jobSuccessful_Results(s *capnp.Segment) (JobCallback_jobSuccessful_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return JobCallback_jobSuccessful_Results(st), err
}

func NewRootJobCallback_jobSuccessful_Results(s *capnp.Segment) (JobCallback_jobSuccessful_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return JobCallback_jobSuccessful_Results(st), err
}

func ReadRootJobCallback_jobSuccessful_Results(msg *capnp.Message) (JobCallback_jobSuccessful_Results, error) {
	root, err := msg.Root()
	return JobCallback_jobSuccessful_Results(root.Struct()), err
}

func (s JobCallback_jobSuccessful_Results) String() string {
	str, _ := text.Marshal(0xfa5237658bb0489b, capnp.Struct(s))
	return str
}

func (s JobCallback_jobSuccessful_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (JobCallback_jobSuccessful_Results) DecodeFromPtr(p capnp.Ptr) JobCallback_jobSuccessful_Results {
	return JobCallback_jobSuccessful_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s JobCallback_jobSuccessful_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s JobCallback_jobSuccessful_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s JobCallback_jobSuccessful_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s JobCallback_jobSuccessful_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// JobCallback_jobSuccessful_Results_List is a list of JobCallback_jobSuccessful_Results.
type JobCallback_jobSuccessful_Results_List = capnp.StructList[JobCallback_jobSuccessful_Results]

// NewJobCallback_jobSuccessful_Results creates a new list of JobCallback_jobSuccessful_Results.
func NewJobCallback_jobSuccessful_Results_List(s *capnp.Segment, sz int32) (JobCallback_jobSuccessful_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[JobCallback_jobSuccessful_Results](l), err
}

// JobCallback_jobSuccessful_Results_Future is a wrapper for a JobCallback_jobSuccessful_Results promised by a client call.
type JobCallback_jobSuccessful_Results_Future struct{ *capnp.Future }

func (f JobCallback_jobSuccessful_Results_Future) Struct() (JobCallback_jobSuccessful_Results, error) {
	p, err := f.Future.Ptr()
	return JobCallback_jobSuccessful_Results(p.Struct()), err
}

type JobCallback_jobFailed_Params capnp.Struct

// JobCallback_jobFailed_Params_TypeID is the unique identifier for the type JobCallback_jobFailed_Params.
const JobCallback_jobFailed_Params_TypeID = 0xd6910ec654e223ae

func NewJobCallback_jobFailed_Params(s *capnp.Segment) (JobCallback_jobFailed_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return JobCallback_jobFailed_Params(st), err
}

func NewRootJobCallback_jobFailed_Params(s *capnp.Segment) (JobCallback_jobFailed_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return JobCallback_jobFailed_Params(st), err
}

func ReadRootJobCallback_jobFailed_Params(msg *capnp.Message) (JobCallback_jobFailed_Params, error) {
	root, err := msg.Root()
	return JobCallback_jobFailed_Params(root.Struct()), err
}

func (s JobCallback_jobFailed_Params) String() string {
	str, _ := text.Marshal(0xd6910ec654e223ae, capnp.Struct(s))
	return str
}

func (s JobCallback_jobFailed_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (JobCallback_jobFailed_Params) DecodeFromPtr(p capnp.Ptr) JobCallback_jobFailed_Params {
	return JobCallback_jobFailed_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s JobCallback_jobFailed_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s JobCallback_jobFailed_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s JobCallback_jobFailed_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s JobCallback_jobFailed_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s JobCallback_jobFailed_Params) LogMsg() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s JobCallback_jobFailed_Params) HasLogMsg() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s JobCallback_jobFailed_Params) LogMsgBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s JobCallback_jobFailed_Params) SetLogMsg(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s JobCallback_jobFailed_Params) Status() Status {
	return Status(capnp.Struct(s).Uint16(0))
}

func (s JobCallback_jobFailed_Params) SetStatus(v Status) {
	capnp.Struct(s).SetUint16(0, uint16(v))
}

// JobCallback_jobFailed_Params_List is a list of JobCallback_jobFailed_Params.
type JobCallback_jobFailed_Params_List = capnp.StructList[JobCallback_jobFailed_Params]

// NewJobCallback_jobFailed_Params creates a new list of JobCallback_jobFailed_Params.
func NewJobCallback_jobFailed_Params_List(s *capnp.Segment, sz int32) (JobCallback_jobFailed_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return capnp.StructList[JobCallback_jobFailed_Params](l), err
}

// JobCallback_jobFailed_Params_Future is a wrapper for a JobCallback_jobFailed_Params promised by a client call.
type JobCallback_jobFailed_Params_Future struct{ *capnp.Future }

func (f JobCallback_jobFailed_Params_Future) Struct() (JobCallback_jobFailed_Params, error) {
	p, err := f.Future.Ptr()
	return JobCallback_jobFailed_Params(p.Struct()), err
}

type JobCallback_jobFailed_Results capnp.Struct

// JobCallback_jobFailed_Results_TypeID is the unique identifier for the type JobCallback_jobFailed_Results.
const JobCallback_jobFailed_Results_TypeID = 0x911e8dcfa580e88c

func NewJobCallback_jobFailed_Results(s *capnp.Segment) (JobCallback_jobFailed_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return JobCallback_jobFailed_Results(st), err
}

func NewRootJobCallback_jobFailed_Results(s *capnp.Segment) (JobCallback_jobFailed_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return JobCallback_jobFailed_Results(st), err
}

func ReadRootJobCallback_jobFailed_Results(msg *capnp.Message) (JobCallback_jobFailed_Results, error) {
	root, err := msg.Root()
	return JobCallback_jobFailed_Results(root.Struct()), err
}

func (s JobCallback_jobFailed_Results) String() string {
	str, _ := text.Marshal(0x911e8dcfa580e88c, capnp.Struct(s))
	return str
}

func (s JobCallback_jobFailed_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (JobCallback_jobFailed_Results) DecodeFromPtr(p capnp.Ptr) JobCallback_jobFailed_Results {
	return JobCallback_jobFailed_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s JobCallback_jobFailed_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s JobCallback_jobFailed_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s JobCallback_jobFailed_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s JobCallback_jobFailed_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// JobCallback_jobFailed_Results_List is a list of JobCallback_jobFailed_Results.
type JobCallback_jobFailed_Results_List = capnp.StructList[JobCallback_jobFailed_Results]

// NewJobCallback_jobFailed_Results creates a new list of JobCallback_jobFailed_Results.
func NewJobCallback_jobFailed_Results_List(s *capnp.Segment, sz int32) (JobCallback_jobFailed_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[JobCallback_jobFailed_Results](l), err
}

// JobCallback_jobFailed_Results_Future is a wrapper for a JobCallback_jobFailed_Results promised by a client call.
type JobCallback_jobFailed_Results_Future struct{ *capnp.Future }

func (f JobCallback_jobFailed_Results_Future) Struct() (JobCallback_jobFailed_Results, error) {
	p, err := f.Future.Ptr()
	return JobCallback_jobFailed_Results(p.Struct()), err
}

type JobCallback_jobCancelled_Params capnp.Struct

// JobCallback_jobCancelled_Params_TypeID is the unique identifier for the type JobCallback_jobCancelled_Params.
const JobCallback_jobCancelled_Params_TypeID = 0x9494e8df9f2cda43

func NewJobCallback_jobCancelled_Params(s *capnp.Segment) (JobCallback_jobCancelled_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return JobCallback_jobCancelled_Params(st), err
}

func NewRootJobCallback_jobCancelled_Params(s *capnp.Segment) (JobCallback_jobCancelled_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return JobCallback_jobCancelled_Params(st), err
}

func ReadRootJobCallback_jobCancelled_Params(msg *capnp.Message) (JobCallback_jobCancelled_Params, error) {
	root, err := msg.Root()
	return JobCallback_jobCancelled_Params(root.Struct()), err
}

func (s JobCallback_jobCancelled_Params) String() string {
	str, _ := text.Marshal(0x9494e8df9f2cda43, capnp.Struct(s))
	return str
}

func (s JobCallback_jobCancelled_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (JobCallback_jobCancelled_Params) DecodeFromPtr(p capnp.Ptr) JobCallback_jobCancelled_Params {
	return JobCallback_jobCancelled_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s JobCallback_jobCancelled_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s JobCallback_jobCancelled_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s JobCallback_jobCancelled_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s JobCallback_jobCancelled_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s JobCallback_jobCancelled_Params) LogMsg() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s JobCallback_jobCancelled_Params) HasLogMsg() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s JobCallback_jobCancelled_Params) LogMsgBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s JobCallback_jobCancelled_Params) SetLogMsg(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s JobCallback_jobCancelled_Params) Status() Status {
	return Status(capnp.Struct(s).Uint16(0))
}

func (s JobCallback_jobCancelled_Params) SetStatus(v Status) {
	capnp.Struct(s).SetUint16(0, uint16(v))
}

// JobCallback_jobCancelled_Params_List is a list of JobCallback_jobCancelled_Params.
type JobCallback_jobCancelled_Params_List = capnp.StructList[JobCallback_jobCancelled_Params]

// NewJobCallback_jobCancelled_Params creates a new list of JobCallback_jobCancelled_Params.
func NewJobCallback_jobCancelled_Params_List(s *capnp.Segment, sz int32) (JobCallback_jobCancelled_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return capnp.StructList[JobCallback_jobCancelled_Params](l), err
}

// JobCallback_jobCancelled_Params_Future is a wrapper for a JobCallback_jobCancelled_Params promised by a client call.
type JobCallback_jobCancelled_Params_Future struct{ *capnp.Future }

func (f JobCallback_jobCancelled_Params_Future) Struct() (JobCallback_jobCancelled_Params, error) {
	p, err := f.Future.Ptr()
	return JobCallback_jobCancelled_Params(p.Struct()), err
}

type JobCallback_jobCancelled_Results capnp.Struct

// JobCallback_jobCancelled_Results_TypeID is the unique identifier for the type JobCallback_jobCancelled_Results.
const JobCallback_jobCancelled_Results_TypeID = 0xb455a37922042f8c

func NewJobCallback_jobCancelled_Results(s *capnp.Segment) (JobCallback_jobCancelled_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return JobCallback_jobCancelled_Results(st), err
}

func NewRootJobCallback_jobCancelled_Results(s *capnp.Segment) (JobCallback_jobCancelled_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return JobCallback_jobCancelled_Results(st), err
}

func ReadRootJobCallback_jobCancelled_Results(msg *capnp.Message) (JobCallback_jobCancelled_Results, error) {
	root, err := msg.Root()
	return JobCallback_jobCancelled_Results(root.Struct()), err
}

func (s JobCallback_jobCancelled_Results) String() string {
	str, _ := text.Marshal(0xb455a37922042f8c, capnp.Struct(s))
	return str
}

func (s JobCallback_jobCancelled_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (JobCallback_jobCancelled_Results) DecodeFromPtr(p capnp.Ptr) JobCallback_jobCancelled_Results {
	return JobCallback_jobCancelled_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s JobCallback_jobCancelled_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s JobCallback_jobCancelled_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s JobCallback_jobCancelled_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s JobCallback_jobCancelled_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// JobCallback_jobCancelled_Results_List is a list of JobCallback_jobCancelled_Results.
type JobCallback_jobCancelled_Results_List = capnp.StructList[JobCallback_jobCancelled_Results]

// NewJobCallback_jobCancelled_Results creates a new list of JobCallback_jobCancelled_Results.
func NewJobCallback_jobCancelled_Results_List(s *capnp.Segment, sz int32) (JobCallback_jobCancelled_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[JobCallback_jobCancelled_Results](l), err
}

// JobCallback_jobCancelled_Results_Future is a wrapper for a JobCallback_jobCancelled_Results promised by a client call.
type JobCallback_jobCancelled_Results_Future struct{ *capnp.Future }

func (f JobCallback_jobCancelled_Results_Future) Struct() (JobCallback_jobCancelled_Results, error) {
	p, err := f.Future.Ptr()
	return JobCallback_jobCancelled_Results(p.Struct()), err
}

type JobSubmitInfo capnp.Struct

// JobSubmitInfo_TypeID is the unique identifier for the type JobSubmitInfo.
const JobSubmitInfo_TypeID = 0xe2e6c1da8c8efa05

func NewJobSubmitInfo(s *capnp.Segment) (JobSubmitInfo, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return JobSubmitInfo(st), err
}

func NewRootJobSubmitInfo(s *capnp.Segment) (JobSubmitInfo, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return JobSubmitInfo(st), err
}

func ReadRootJobSubmitInfo(msg *capnp.Message) (JobSubmitInfo, error) {
	root, err := msg.Root()
	return JobSubmitInfo(root.Struct()), err
}

func (s JobSubmitInfo) String() string {
	str, _ := text.Marshal(0xe2e6c1da8c8efa05, capnp.Struct(s))
	return str
}

func (s JobSubmitInfo) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (JobSubmitInfo) DecodeFromPtr(p capnp.Ptr) JobSubmitInfo {
	return JobSubmitInfo(capnp.Struct{}.DecodeFromPtr(p))
}

func (s JobSubmitInfo) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s JobSubmitInfo) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s JobSubmitInfo) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s JobSubmitInfo) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s JobSubmitInfo) JobName() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s JobSubmitInfo) HasJobName() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s JobSubmitInfo) JobNameBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s JobSubmitInfo) SetJobName(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s JobSubmitInfo) Process() (string, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.Text(), err
}

func (s JobSubmitInfo) HasProcess() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s JobSubmitInfo) ProcessBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.TextBytes(), err
}

func (s JobSubmitInfo) SetProcess(v string) error {
	return capnp.Struct(s).SetText(1, v)
}

// JobSubmitInfo_List is a list of JobSubmitInfo.
type JobSubmitInfo_List = capnp.StructList[JobSubmitInfo]

// NewJobSubmitInfo creates a new list of JobSubmitInfo.
func NewJobSubmitInfo_List(s *capnp.Segment, sz int32) (JobSubmitInfo_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return capnp.StructList[JobSubmitInfo](l), err
}

// JobSubmitInfo_Future is a wrapper for a JobSubmitInfo promised by a client call.
type JobSubmitInfo_Future struct{ *capnp.Future }

func (f JobSubmitInfo_Future) Struct() (JobSubmitInfo, error) {
	p, err := f.Future.Ptr()
	return JobSubmitInfo(p.Struct()), err
}

type JobExecutor capnp.Client

// JobExecutor_TypeID is the unique identifier for the type JobExecutor.
const JobExecutor_TypeID = 0xa0d35e4b87addf30

func (c JobExecutor) SubmitJob(ctx context.Context, params func(JobExecutor_submitJob_Params) error) (JobExecutor_submitJob_Results_Future, capnp.ReleaseFunc) {

	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xa0d35e4b87addf30,
			MethodID:      0,
			InterfaceName: "jobmgrcapnp.capnp:JobExecutor",
			MethodName:    "submitJob",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		s.PlaceArgs = func(s capnp.Struct) error { return params(JobExecutor_submitJob_Params(s)) }
	}

	ans, release := capnp.Client(c).SendCall(ctx, s)
	return JobExecutor_submitJob_Results_Future{Future: ans.Future()}, release

}

func (c JobExecutor) WaitStreaming() error {
	return capnp.Client(c).WaitStreaming()
}

// String returns a string that identifies this capability for debugging
// purposes.  Its format should not be depended on: in particular, it
// should not be used to compare clients.  Use IsSame to compare clients
// for equality.
func (c JobExecutor) String() string {
	return "JobExecutor(" + capnp.Client(c).String() + ")"
}

// AddRef creates a new Client that refers to the same capability as c.
// If c is nil or has resolved to null, then AddRef returns nil.
func (c JobExecutor) AddRef() JobExecutor {
	return JobExecutor(capnp.Client(c).AddRef())
}

// Release releases a capability reference.  If this is the last
// reference to the capability, then the underlying resources associated
// with the capability will be released.
//
// Release will panic if c has already been released, but not if c is
// nil or resolved to null.
func (c JobExecutor) Release() {
	capnp.Client(c).Release()
}

// Resolve blocks until the capability is fully resolved or the Context
// expires.
func (c JobExecutor) Resolve(ctx context.Context) error {
	return capnp.Client(c).Resolve(ctx)
}

func (c JobExecutor) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Client(c).EncodeAsPtr(seg)
}

func (JobExecutor) DecodeFromPtr(p capnp.Ptr) JobExecutor {
	return JobExecutor(capnp.Client{}.DecodeFromPtr(p))
}

// IsValid reports whether c is a valid reference to a capability.
// A reference is invalid if it is nil, has resolved to null, or has
// been released.
func (c JobExecutor) IsValid() bool {
	return capnp.Client(c).IsValid()
}

// IsSame reports whether c and other refer to a capability created by the
// same call to NewClient.  This can return false negatives if c or other
// are not fully resolved: use Resolve if this is an issue.  If either
// c or other are released, then IsSame panics.
func (c JobExecutor) IsSame(other JobExecutor) bool {
	return capnp.Client(c).IsSame(capnp.Client(other))
}

// Update the flowcontrol.FlowLimiter used to manage flow control for
// this client. This affects all future calls, but not calls already
// waiting to send. Passing nil sets the value to flowcontrol.NopLimiter,
// which is also the default.
func (c JobExecutor) SetFlowLimiter(lim fc.FlowLimiter) {
	capnp.Client(c).SetFlowLimiter(lim)
}

// Get the current flowcontrol.FlowLimiter used to manage flow control
// for this client.
func (c JobExecutor) GetFlowLimiter() fc.FlowLimiter {
	return capnp.Client(c).GetFlowLimiter()
}

// A JobExecutor_Server is a JobExecutor with a local implementation.
type JobExecutor_Server interface {
	SubmitJob(context.Context, JobExecutor_submitJob) error
}

// JobExecutor_NewServer creates a new Server from an implementation of JobExecutor_Server.
func JobExecutor_NewServer(s JobExecutor_Server) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(JobExecutor_Methods(nil, s), s, c)
}

// JobExecutor_ServerToClient creates a new Client from an implementation of JobExecutor_Server.
// The caller is responsible for calling Release on the returned Client.
func JobExecutor_ServerToClient(s JobExecutor_Server) JobExecutor {
	return JobExecutor(capnp.NewClient(JobExecutor_NewServer(s)))
}

// JobExecutor_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func JobExecutor_Methods(methods []server.Method, s JobExecutor_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 1)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa0d35e4b87addf30,
			MethodID:      0,
			InterfaceName: "jobmgrcapnp.capnp:JobExecutor",
			MethodName:    "submitJob",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.SubmitJob(ctx, JobExecutor_submitJob{call})
		},
	})

	return methods
}

// JobExecutor_submitJob holds the state for a server call to JobExecutor.submitJob.
// See server.Call for documentation.
type JobExecutor_submitJob struct {
	*server.Call
}

// Args returns the call's arguments.
func (c JobExecutor_submitJob) Args() JobExecutor_submitJob_Params {
	return JobExecutor_submitJob_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c JobExecutor_submitJob) AllocResults() (JobExecutor_submitJob_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return JobExecutor_submitJob_Results(r), err
}

// JobExecutor_List is a list of JobExecutor.
type JobExecutor_List = capnp.CapList[JobExecutor]

// NewJobExecutor_List creates a new list of JobExecutor.
func NewJobExecutor_List(s *capnp.Segment, sz int32) (JobExecutor_List, error) {
	l, err := capnp.NewPointerList(s, sz)
	return capnp.CapList[JobExecutor](l), err
}

type JobExecutor_submitJob_Params capnp.Struct

// JobExecutor_submitJob_Params_TypeID is the unique identifier for the type JobExecutor_submitJob_Params.
const JobExecutor_submitJob_Params_TypeID = 0xaad200693eb98c29

func NewJobExecutor_submitJob_Params(s *capnp.Segment) (JobExecutor_submitJob_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return JobExecutor_submitJob_Params(st), err
}

func NewRootJobExecutor_submitJob_Params(s *capnp.Segment) (JobExecutor_submitJob_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return JobExecutor_submitJob_Params(st), err
}

func ReadRootJobExecutor_submitJob_Params(msg *capnp.Message) (JobExecutor_submitJob_Params, error) {
	root, err := msg.Root()
	return JobExecutor_submitJob_Params(root.Struct()), err
}

func (s JobExecutor_submitJob_Params) String() string {
	str, _ := text.Marshal(0xaad200693eb98c29, capnp.Struct(s))
	return str
}

func (s JobExecutor_submitJob_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (JobExecutor_submitJob_Params) DecodeFromPtr(p capnp.Ptr) JobExecutor_submitJob_Params {
	return JobExecutor_submitJob_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s JobExecutor_submitJob_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s JobExecutor_submitJob_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s JobExecutor_submitJob_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s JobExecutor_submitJob_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s JobExecutor_submitJob_Params) Jobinfo() (JobSubmitInfo, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return JobSubmitInfo(p.Struct()), err
}

func (s JobExecutor_submitJob_Params) HasJobinfo() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s JobExecutor_submitJob_Params) SetJobinfo(v JobSubmitInfo) error {
	return capnp.Struct(s).SetPtr(0, capnp.Struct(v).ToPtr())
}

// NewJobinfo sets the jobinfo field to a newly
// allocated JobSubmitInfo struct, preferring placement in s's segment.
func (s JobExecutor_submitJob_Params) NewJobinfo() (JobSubmitInfo, error) {
	ss, err := NewJobSubmitInfo(capnp.Struct(s).Segment())
	if err != nil {
		return JobSubmitInfo{}, err
	}
	err = capnp.Struct(s).SetPtr(0, capnp.Struct(ss).ToPtr())
	return ss, err
}

func (s JobExecutor_submitJob_Params) Callback() JobCallback {
	p, _ := capnp.Struct(s).Ptr(1)
	return JobCallback(p.Interface().Client())
}

func (s JobExecutor_submitJob_Params) HasCallback() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s JobExecutor_submitJob_Params) SetCallback(v JobCallback) error {
	if !v.IsValid() {
		return capnp.Struct(s).SetPtr(1, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().CapTable().Add(capnp.Client(v)))
	return capnp.Struct(s).SetPtr(1, in.ToPtr())
}

// JobExecutor_submitJob_Params_List is a list of JobExecutor_submitJob_Params.
type JobExecutor_submitJob_Params_List = capnp.StructList[JobExecutor_submitJob_Params]

// NewJobExecutor_submitJob_Params creates a new list of JobExecutor_submitJob_Params.
func NewJobExecutor_submitJob_Params_List(s *capnp.Segment, sz int32) (JobExecutor_submitJob_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return capnp.StructList[JobExecutor_submitJob_Params](l), err
}

// JobExecutor_submitJob_Params_Future is a wrapper for a JobExecutor_submitJob_Params promised by a client call.
type JobExecutor_submitJob_Params_Future struct{ *capnp.Future }

func (f JobExecutor_submitJob_Params_Future) Struct() (JobExecutor_submitJob_Params, error) {
	p, err := f.Future.Ptr()
	return JobExecutor_submitJob_Params(p.Struct()), err
}
func (p JobExecutor_submitJob_Params_Future) Jobinfo() JobSubmitInfo_Future {
	return JobSubmitInfo_Future{Future: p.Future.Field(0, nil)}
}
func (p JobExecutor_submitJob_Params_Future) Callback() JobCallback {
	return JobCallback(p.Future.Field(1, nil).Client())
}

type JobExecutor_submitJob_Results capnp.Struct

// JobExecutor_submitJob_Results_TypeID is the unique identifier for the type JobExecutor_submitJob_Results.
const JobExecutor_submitJob_Results_TypeID = 0xcf6ba69f4bd802b7

func NewJobExecutor_submitJob_Results(s *capnp.Segment) (JobExecutor_submitJob_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return JobExecutor_submitJob_Results(st), err
}

func NewRootJobExecutor_submitJob_Results(s *capnp.Segment) (JobExecutor_submitJob_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return JobExecutor_submitJob_Results(st), err
}

func ReadRootJobExecutor_submitJob_Results(msg *capnp.Message) (JobExecutor_submitJob_Results, error) {
	root, err := msg.Root()
	return JobExecutor_submitJob_Results(root.Struct()), err
}

func (s JobExecutor_submitJob_Results) String() string {
	str, _ := text.Marshal(0xcf6ba69f4bd802b7, capnp.Struct(s))
	return str
}

func (s JobExecutor_submitJob_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (JobExecutor_submitJob_Results) DecodeFromPtr(p capnp.Ptr) JobExecutor_submitJob_Results {
	return JobExecutor_submitJob_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s JobExecutor_submitJob_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s JobExecutor_submitJob_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s JobExecutor_submitJob_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s JobExecutor_submitJob_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s JobExecutor_submitJob_Results) Jobquery() JobQueryCancel {
	p, _ := capnp.Struct(s).Ptr(0)
	return JobQueryCancel(p.Interface().Client())
}

func (s JobExecutor_submitJob_Results) HasJobquery() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s JobExecutor_submitJob_Results) SetJobquery(v JobQueryCancel) error {
	if !v.IsValid() {
		return capnp.Struct(s).SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().CapTable().Add(capnp.Client(v)))
	return capnp.Struct(s).SetPtr(0, in.ToPtr())
}

// JobExecutor_submitJob_Results_List is a list of JobExecutor_submitJob_Results.
type JobExecutor_submitJob_Results_List = capnp.StructList[JobExecutor_submitJob_Results]

// NewJobExecutor_submitJob_Results creates a new list of JobExecutor_submitJob_Results.
func NewJobExecutor_submitJob_Results_List(s *capnp.Segment, sz int32) (JobExecutor_submitJob_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[JobExecutor_submitJob_Results](l), err
}

// JobExecutor_submitJob_Results_Future is a wrapper for a JobExecutor_submitJob_Results promised by a client call.
type JobExecutor_submitJob_Results_Future struct{ *capnp.Future }

func (f JobExecutor_submitJob_Results_Future) Struct() (JobExecutor_submitJob_Results, error) {
	p, err := f.Future.Ptr()
	return JobExecutor_submitJob_Results(p.Struct()), err
}
func (p JobExecutor_submitJob_Results_Future) Jobquery() JobQueryCancel {
	return JobQueryCancel(p.Future.Field(0, nil).Client())
}

type JobQueryCancel capnp.Client

// JobQueryCancel_TypeID is the unique identifier for the type JobQueryCancel.
const JobQueryCancel_TypeID = 0xc1e385c430bc6e79

func (c JobQueryCancel) QueryJob(ctx context.Context, params func(JobQueryCancel_queryJob_Params) error) (JobQueryCancel_queryJob_Results_Future, capnp.ReleaseFunc) {

	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc1e385c430bc6e79,
			MethodID:      0,
			InterfaceName: "jobmgrcapnp.capnp:JobQueryCancel",
			MethodName:    "queryJob",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(JobQueryCancel_queryJob_Params(s)) }
	}

	ans, release := capnp.Client(c).SendCall(ctx, s)
	return JobQueryCancel_queryJob_Results_Future{Future: ans.Future()}, release

}

func (c JobQueryCancel) CancelJob(ctx context.Context, params func(JobQueryCancel_cancelJob_Params) error) (JobQueryCancel_cancelJob_Results_Future, capnp.ReleaseFunc) {

	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc1e385c430bc6e79,
			MethodID:      1,
			InterfaceName: "jobmgrcapnp.capnp:JobQueryCancel",
			MethodName:    "cancelJob",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(JobQueryCancel_cancelJob_Params(s)) }
	}

	ans, release := capnp.Client(c).SendCall(ctx, s)
	return JobQueryCancel_cancelJob_Results_Future{Future: ans.Future()}, release

}

func (c JobQueryCancel) WaitStreaming() error {
	return capnp.Client(c).WaitStreaming()
}

// String returns a string that identifies this capability for debugging
// purposes.  Its format should not be depended on: in particular, it
// should not be used to compare clients.  Use IsSame to compare clients
// for equality.
func (c JobQueryCancel) String() string {
	return "JobQueryCancel(" + capnp.Client(c).String() + ")"
}

// AddRef creates a new Client that refers to the same capability as c.
// If c is nil or has resolved to null, then AddRef returns nil.
func (c JobQueryCancel) AddRef() JobQueryCancel {
	return JobQueryCancel(capnp.Client(c).AddRef())
}

// Release releases a capability reference.  If this is the last
// reference to the capability, then the underlying resources associated
// with the capability will be released.
//
// Release will panic if c has already been released, but not if c is
// nil or resolved to null.
func (c JobQueryCancel) Release() {
	capnp.Client(c).Release()
}

// Resolve blocks until the capability is fully resolved or the Context
// expires.
func (c JobQueryCancel) Resolve(ctx context.Context) error {
	return capnp.Client(c).Resolve(ctx)
}

func (c JobQueryCancel) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Client(c).EncodeAsPtr(seg)
}

func (JobQueryCancel) DecodeFromPtr(p capnp.Ptr) JobQueryCancel {
	return JobQueryCancel(capnp.Client{}.DecodeFromPtr(p))
}

// IsValid reports whether c is a valid reference to a capability.
// A reference is invalid if it is nil, has resolved to null, or has
// been released.
func (c JobQueryCancel) IsValid() bool {
	return capnp.Client(c).IsValid()
}

// IsSame reports whether c and other refer to a capability created by the
// same call to NewClient.  This can return false negatives if c or other
// are not fully resolved: use Resolve if this is an issue.  If either
// c or other are released, then IsSame panics.
func (c JobQueryCancel) IsSame(other JobQueryCancel) bool {
	return capnp.Client(c).IsSame(capnp.Client(other))
}

// Update the flowcontrol.FlowLimiter used to manage flow control for
// this client. This affects all future calls, but not calls already
// waiting to send. Passing nil sets the value to flowcontrol.NopLimiter,
// which is also the default.
func (c JobQueryCancel) SetFlowLimiter(lim fc.FlowLimiter) {
	capnp.Client(c).SetFlowLimiter(lim)
}

// Get the current flowcontrol.FlowLimiter used to manage flow control
// for this client.
func (c JobQueryCancel) GetFlowLimiter() fc.FlowLimiter {
	return capnp.Client(c).GetFlowLimiter()
}

// A JobQueryCancel_Server is a JobQueryCancel with a local implementation.
type JobQueryCancel_Server interface {
	QueryJob(context.Context, JobQueryCancel_queryJob) error

	CancelJob(context.Context, JobQueryCancel_cancelJob) error
}

// JobQueryCancel_NewServer creates a new Server from an implementation of JobQueryCancel_Server.
func JobQueryCancel_NewServer(s JobQueryCancel_Server) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(JobQueryCancel_Methods(nil, s), s, c)
}

// JobQueryCancel_ServerToClient creates a new Client from an implementation of JobQueryCancel_Server.
// The caller is responsible for calling Release on the returned Client.
func JobQueryCancel_ServerToClient(s JobQueryCancel_Server) JobQueryCancel {
	return JobQueryCancel(capnp.NewClient(JobQueryCancel_NewServer(s)))
}

// JobQueryCancel_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func JobQueryCancel_Methods(methods []server.Method, s JobQueryCancel_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 2)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc1e385c430bc6e79,
			MethodID:      0,
			InterfaceName: "jobmgrcapnp.capnp:JobQueryCancel",
			MethodName:    "queryJob",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.QueryJob(ctx, JobQueryCancel_queryJob{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc1e385c430bc6e79,
			MethodID:      1,
			InterfaceName: "jobmgrcapnp.capnp:JobQueryCancel",
			MethodName:    "cancelJob",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.CancelJob(ctx, JobQueryCancel_cancelJob{call})
		},
	})

	return methods
}

// JobQueryCancel_queryJob holds the state for a server call to JobQueryCancel.queryJob.
// See server.Call for documentation.
type JobQueryCancel_queryJob struct {
	*server.Call
}

// Args returns the call's arguments.
func (c JobQueryCancel_queryJob) Args() JobQueryCancel_queryJob_Params {
	return JobQueryCancel_queryJob_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c JobQueryCancel_queryJob) AllocResults() (JobQueryCancel_queryJob_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return JobQueryCancel_queryJob_Results(r), err
}

// JobQueryCancel_cancelJob holds the state for a server call to JobQueryCancel.cancelJob.
// See server.Call for documentation.
type JobQueryCancel_cancelJob struct {
	*server.Call
}

// Args returns the call's arguments.
func (c JobQueryCancel_cancelJob) Args() JobQueryCancel_cancelJob_Params {
	return JobQueryCancel_cancelJob_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c JobQueryCancel_cancelJob) AllocResults() (JobQueryCancel_cancelJob_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return JobQueryCancel_cancelJob_Results(r), err
}

// JobQueryCancel_List is a list of JobQueryCancel.
type JobQueryCancel_List = capnp.CapList[JobQueryCancel]

// NewJobQueryCancel_List creates a new list of JobQueryCancel.
func NewJobQueryCancel_List(s *capnp.Segment, sz int32) (JobQueryCancel_List, error) {
	l, err := capnp.NewPointerList(s, sz)
	return capnp.CapList[JobQueryCancel](l), err
}

type JobQueryCancel_queryJob_Params capnp.Struct

// JobQueryCancel_queryJob_Params_TypeID is the unique identifier for the type JobQueryCancel_queryJob_Params.
const JobQueryCancel_queryJob_Params_TypeID = 0xe566fb9c508f20be

func NewJobQueryCancel_queryJob_Params(s *capnp.Segment) (JobQueryCancel_queryJob_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return JobQueryCancel_queryJob_Params(st), err
}

func NewRootJobQueryCancel_queryJob_Params(s *capnp.Segment) (JobQueryCancel_queryJob_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return JobQueryCancel_queryJob_Params(st), err
}

func ReadRootJobQueryCancel_queryJob_Params(msg *capnp.Message) (JobQueryCancel_queryJob_Params, error) {
	root, err := msg.Root()
	return JobQueryCancel_queryJob_Params(root.Struct()), err
}

func (s JobQueryCancel_queryJob_Params) String() string {
	str, _ := text.Marshal(0xe566fb9c508f20be, capnp.Struct(s))
	return str
}

func (s JobQueryCancel_queryJob_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (JobQueryCancel_queryJob_Params) DecodeFromPtr(p capnp.Ptr) JobQueryCancel_queryJob_Params {
	return JobQueryCancel_queryJob_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s JobQueryCancel_queryJob_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s JobQueryCancel_queryJob_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s JobQueryCancel_queryJob_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s JobQueryCancel_queryJob_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// JobQueryCancel_queryJob_Params_List is a list of JobQueryCancel_queryJob_Params.
type JobQueryCancel_queryJob_Params_List = capnp.StructList[JobQueryCancel_queryJob_Params]

// NewJobQueryCancel_queryJob_Params creates a new list of JobQueryCancel_queryJob_Params.
func NewJobQueryCancel_queryJob_Params_List(s *capnp.Segment, sz int32) (JobQueryCancel_queryJob_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[JobQueryCancel_queryJob_Params](l), err
}

// JobQueryCancel_queryJob_Params_Future is a wrapper for a JobQueryCancel_queryJob_Params promised by a client call.
type JobQueryCancel_queryJob_Params_Future struct{ *capnp.Future }

func (f JobQueryCancel_queryJob_Params_Future) Struct() (JobQueryCancel_queryJob_Params, error) {
	p, err := f.Future.Ptr()
	return JobQueryCancel_queryJob_Params(p.Struct()), err
}

type JobQueryCancel_queryJob_Results capnp.Struct

// JobQueryCancel_queryJob_Results_TypeID is the unique identifier for the type JobQueryCancel_queryJob_Results.
const JobQueryCancel_queryJob_Results_TypeID = 0x95c1bdfdc8d9f754

func NewJobQueryCancel_queryJob_Results(s *capnp.Segment) (JobQueryCancel_queryJob_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return JobQueryCancel_queryJob_Results(st), err
}

func NewRootJobQueryCancel_queryJob_Results(s *capnp.Segment) (JobQueryCancel_queryJob_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return JobQueryCancel_queryJob_Results(st), err
}

func ReadRootJobQueryCancel_queryJob_Results(msg *capnp.Message) (JobQueryCancel_queryJob_Results, error) {
	root, err := msg.Root()
	return JobQueryCancel_queryJob_Results(root.Struct()), err
}

func (s JobQueryCancel_queryJob_Results) String() string {
	str, _ := text.Marshal(0x95c1bdfdc8d9f754, capnp.Struct(s))
	return str
}

func (s JobQueryCancel_queryJob_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (JobQueryCancel_queryJob_Results) DecodeFromPtr(p capnp.Ptr) JobQueryCancel_queryJob_Results {
	return JobQueryCancel_queryJob_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s JobQueryCancel_queryJob_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s JobQueryCancel_queryJob_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s JobQueryCancel_queryJob_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s JobQueryCancel_queryJob_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s JobQueryCancel_queryJob_Results) Active() bool {
	return capnp.Struct(s).Bit(0)
}

func (s JobQueryCancel_queryJob_Results) SetActive(v bool) {
	capnp.Struct(s).SetBit(0, v)
}

// JobQueryCancel_queryJob_Results_List is a list of JobQueryCancel_queryJob_Results.
type JobQueryCancel_queryJob_Results_List = capnp.StructList[JobQueryCancel_queryJob_Results]

// NewJobQueryCancel_queryJob_Results creates a new list of JobQueryCancel_queryJob_Results.
func NewJobQueryCancel_queryJob_Results_List(s *capnp.Segment, sz int32) (JobQueryCancel_queryJob_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return capnp.StructList[JobQueryCancel_queryJob_Results](l), err
}

// JobQueryCancel_queryJob_Results_Future is a wrapper for a JobQueryCancel_queryJob_Results promised by a client call.
type JobQueryCancel_queryJob_Results_Future struct{ *capnp.Future }

func (f JobQueryCancel_queryJob_Results_Future) Struct() (JobQueryCancel_queryJob_Results, error) {
	p, err := f.Future.Ptr()
	return JobQueryCancel_queryJob_Results(p.Struct()), err
}

type JobQueryCancel_cancelJob_Params capnp.Struct

// JobQueryCancel_cancelJob_Params_TypeID is the unique identifier for the type JobQueryCancel_cancelJob_Params.
const JobQueryCancel_cancelJob_Params_TypeID = 0xf6ee3da5514b2780

func NewJobQueryCancel_cancelJob_Params(s *capnp.Segment) (JobQueryCancel_cancelJob_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return JobQueryCancel_cancelJob_Params(st), err
}

func NewRootJobQueryCancel_cancelJob_Params(s *capnp.Segment) (JobQueryCancel_cancelJob_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return JobQueryCancel_cancelJob_Params(st), err
}

func ReadRootJobQueryCancel_cancelJob_Params(msg *capnp.Message) (JobQueryCancel_cancelJob_Params, error) {
	root, err := msg.Root()
	return JobQueryCancel_cancelJob_Params(root.Struct()), err
}

func (s JobQueryCancel_cancelJob_Params) String() string {
	str, _ := text.Marshal(0xf6ee3da5514b2780, capnp.Struct(s))
	return str
}

func (s JobQueryCancel_cancelJob_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (JobQueryCancel_cancelJob_Params) DecodeFromPtr(p capnp.Ptr) JobQueryCancel_cancelJob_Params {
	return JobQueryCancel_cancelJob_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s JobQueryCancel_cancelJob_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s JobQueryCancel_cancelJob_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s JobQueryCancel_cancelJob_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s JobQueryCancel_cancelJob_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// JobQueryCancel_cancelJob_Params_List is a list of JobQueryCancel_cancelJob_Params.
type JobQueryCancel_cancelJob_Params_List = capnp.StructList[JobQueryCancel_cancelJob_Params]

// NewJobQueryCancel_cancelJob_Params creates a new list of JobQueryCancel_cancelJob_Params.
func NewJobQueryCancel_cancelJob_Params_List(s *capnp.Segment, sz int32) (JobQueryCancel_cancelJob_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[JobQueryCancel_cancelJob_Params](l), err
}

// JobQueryCancel_cancelJob_Params_Future is a wrapper for a JobQueryCancel_cancelJob_Params promised by a client call.
type JobQueryCancel_cancelJob_Params_Future struct{ *capnp.Future }

func (f JobQueryCancel_cancelJob_Params_Future) Struct() (JobQueryCancel_cancelJob_Params, error) {
	p, err := f.Future.Ptr()
	return JobQueryCancel_cancelJob_Params(p.Struct()), err
}

type JobQueryCancel_cancelJob_Results capnp.Struct

// JobQueryCancel_cancelJob_Results_TypeID is the unique identifier for the type JobQueryCancel_cancelJob_Results.
const JobQueryCancel_cancelJob_Results_TypeID = 0xfdfefe331d29867c

func NewJobQueryCancel_cancelJob_Results(s *capnp.Segment) (JobQueryCancel_cancelJob_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return JobQueryCancel_cancelJob_Results(st), err
}

func NewRootJobQueryCancel_cancelJob_Results(s *capnp.Segment) (JobQueryCancel_cancelJob_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return JobQueryCancel_cancelJob_Results(st), err
}

func ReadRootJobQueryCancel_cancelJob_Results(msg *capnp.Message) (JobQueryCancel_cancelJob_Results, error) {
	root, err := msg.Root()
	return JobQueryCancel_cancelJob_Results(root.Struct()), err
}

func (s JobQueryCancel_cancelJob_Results) String() string {
	str, _ := text.Marshal(0xfdfefe331d29867c, capnp.Struct(s))
	return str
}

func (s JobQueryCancel_cancelJob_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (JobQueryCancel_cancelJob_Results) DecodeFromPtr(p capnp.Ptr) JobQueryCancel_cancelJob_Results {
	return JobQueryCancel_cancelJob_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s JobQueryCancel_cancelJob_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s JobQueryCancel_cancelJob_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s JobQueryCancel_cancelJob_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s JobQueryCancel_cancelJob_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s JobQueryCancel_cancelJob_Results) Cancelled() bool {
	return capnp.Struct(s).Bit(0)
}

func (s JobQueryCancel_cancelJob_Results) SetCancelled(v bool) {
	capnp.Struct(s).SetBit(0, v)
}

// JobQueryCancel_cancelJob_Results_List is a list of JobQueryCancel_cancelJob_Results.
type JobQueryCancel_cancelJob_Results_List = capnp.StructList[JobQueryCancel_cancelJob_Results]

// NewJobQueryCancel_cancelJob_Results creates a new list of JobQueryCancel_cancelJob_Results.
func NewJobQueryCancel_cancelJob_Results_List(s *capnp.Segment, sz int32) (JobQueryCancel_cancelJob_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return capnp.StructList[JobQueryCancel_cancelJob_Results](l), err
}

// JobQueryCancel_cancelJob_Results_Future is a wrapper for a JobQueryCancel_cancelJob_Results promised by a client call.
type JobQueryCancel_cancelJob_Results_Future struct{ *capnp.Future }

func (f JobQueryCancel_cancelJob_Results_Future) Struct() (JobQueryCancel_cancelJob_Results, error) {
	p, err := f.Future.Ptr()
	return JobQueryCancel_cancelJob_Results(p.Struct()), err
}

const schema_95f578ba422c9f4b = "x\xda\xbcVkl\x14U\x14>g\x1e;S-," +
	"\x97\xa1\x09&\x96\x82\x96hM[\x0a\xb5*5uK" +
	"+\xca\xb6\x80\x9d\x16~\xf0C\xe2\xecvZ\xb7lw" +
	"\x96}H\xab\x92\"\x01\x09\xd2b \x10\x83\xa0\xf8H" +
	"M$\xc1G\xe2#\xa8\x98\x90\x18\xa3\x86\x84\x88\xf1\x85" +
	"F\x14\x83!\x9a\xf8\x83\x04\x1f(\x8c93{gg" +
	"\xdb]\xaa&\xfaow\xee=\xe7|\xe7;\xe7|\xf7" +
	"4\xdc'\xb6J\x0b\xa7\xddS\x06\x82\x1e\x97\x03\xf6\xd8" +
	"\xceoj\xab\xb5\xc3;\x80\xcdA\x00\x19\x15\x80\xc61" +
	"i7\x02jOI!@{\xf4\xdc\xa6\xf1\x13cs" +
	"v\xb9\x17$:?*mF\x90\xec\xf6S\xb5\x07O" +
	"\x9f\xdb\xb3\x07\xf49\xe8\xd9\xbe\xe8\xda\x1e\x916\x00\xda" +
	"\xab~\xfd\xf2\x83KG\x8f\xed\x05}\x1er\xe3\x0a\xd9" +
	"\xb90_&\xe7+\xaf\xb9|q\xfa\xd0\xd3\xfb}\xce" +
	"\x97\xcaO\x92\xf3\x86\xd3\x87\xb7u\xae\xfd\xe4\x19`3" +
	"E\xbb\xf3`m\xdb[C\x17\xf6\x02\xa0\xd6$\x9f\xd7" +
	"\x96\xc8\x0a\x80\xd6\"\xdf\xad\xc5\xe8\x97\x9d\xec]0n" +
	"~7\xfdP.\x09\x91\xfc\xe8\xf2I\x8ac\xca/\x03" +
	"\x9e\xae\x19=rG\xec\xe4!\xf7X\xa0\xe3K\xf2\x83" +
	"t\\\x16 \x9c\xa3\x0b\xa4\xeb\x86\x9f_\xfd\x9a\x0fF" +
	",\xe0\xc0\x18N\xbc\xd3\xf0\xde\xd6\xef\x8fM\x84\xd1\xb8" +
	"&p\x15j\xb1\x00\xe10\x03\xdb\xb4\xa3\xf4\xcb~{" +
	"\xee\x9a-\x07\xbe\xbd\xfd\xc3\x02F\xc6\xc9\x13j\xaf;" +
	"\x91\xde\x14\xbe\xe8<\xf8\xc2\xba\x13~\xba\x99\xb2\x99." +
	"T*\xc4\xc8\xf1\x87\x9a\xde\xf88Z\xfe)\xb0\x99B" +
	"A\xdeK\x94\x8f\xb4\x15\x0a\xc5\x0b+#\x80\xf6K\xd7" +
	"\x9fY\xf5\xfe\xf4]\x9f\x15\xc4\xda\xa88YmW(" +
	"\xd6\xd7\xfb~\xbc\x7f\xcbO\xdb\xbf\xca\xddp\xd2:\xab" +
	"8\xec_pb\xc9\x17w\x8e\x9e:\xf6\xc3\x19`3" +
	"1\x1f\xcb\xe5\xa7B\x15P\x9b\xa7R\xbcJ\x95\xbc\xbd" +
	";\xf7\xf1\xae\x03\x7f\xf4\x9d\x056\x8f;\x1bV\x1f#" +
	"\x8e6\x84\x13\xeb\xae\xbd\xe5\xb7\xb3~\xf6T\x87\xbdM" +
	"7t\xea\xe3-?\xff\xe2\xb3Y\xa3\xee\xa6\x93\x95c" +
	"k7>\xf2\xf9\x13\xbf\xfbl\xc2\xea):\xd9\xbf\xec" +
	"\x95\x1d\xe6\xad\xdd\x17}'-\xeast\"\x1d\xdf\xdb" +
	"\x12: \xff9\xa9%\xea\xd4\xf3\xdab\x82\xda\xd8\xa4" +
	"nCmI\x19\xd5\xe2\xe1Gk*\x1b/_\xbe\xe4" +
	"\xef\xbd\x9a2\xa7\x14\x8b\xcbBPg\x0fX\x91\xc1\xfe" +
	"T\xd4\x90\x93\x89d}\xd4H&\x92\xcd\x1dV\xa4\xdd" +
	"\x88\xc7#Ft]}6\xd9kd\xcc\x0e+\xb2\xdc" +
	"\xea\xaf\xee2R\xc6 \xa6uI\x94\x00$\x04`\xd3" +
	"\x9a\x01tUD}\x96\x80\xa1\xb8\xd5\xbf\"\xdd\x8f\xe5" +
	" `9\xa0\xe7\xf9\xea\xe2\x9e\x07\xac\xc8]F,n" +
	"\xf6Vw\x9b\xe9l<\x93\x06nP\xf2~\xbb\x91\x88" +
	"\x9aq2\xe1HT\x0fI\x0d!\xa9\x16Qo\x10\x10" +
	"q\x16%\xcb\xea\xe8\xdb\x8d\"\xea7OB\x17Jg" +
	"\x8cL6\x8d\xc1|\xab\x01b\xd0\x07\xbb\x90\x10=k" +
	"\xa6\x86\xdd\xf8\xf5\xeb\xe9w\x87\x15\xc9\x01/M\x88\x11" +
	"\xcd\xc4\x1e0\x11A@,\xe9\xb98\xd5\x8ek1\x93" +
	"\xf6\x8c\x84\x02\xa3\xa5CfU4\x9b\xb1R]\x88\xba" +
	"$\xca\x00|\xb8}\xb3\xc5\xbaA`e\x8a\x9d\xceF" +
	"\x06c\x99\x0e\x0b0\xd2\x8a]\x98\x07\x12(\x0e$\x96" +
	"\x88ebF|5\xc7\x13N\xf4Y\x1e\xe3\xe5^\xaa" +
	"K\xdb\x00\xf4V\x11\xf5\xe5\x022Nyx\x11\x80~" +
	"\xa7\x88z\x97\x80L\x10f\xa1\x00\xc0V\xd0\xcde\"" +
	"\xea\xab\x04\x1c\x19\xb0\"\x09c\xd0\xe4\x85\xa8\x1a\xb0\"" +
	"\xe1^\xfeo$\x99\xb2\xa2f:=\xa9\x89\xa4\x89\xe9" +
	";\xd9\xd7\xf3\xd4\"\xd5!\x07`AG\xb4\xe5;\xc2" +
	"\xc3W\xd7\x01\xa0\xd7\x8a\xa8\xdf\xe6B\x89%\xfa,\x9c" +
	"\x91\xd7\x00@\x9c\x01hGs\\\x00\x00\xb2\xfc\xc8\x01" +
	"\"\x9b\xba\x90\x05\x9d:\xa9\x90b\xa9\xbe\x02\xa0b\xaa" +
	"TLOf\x90\xbf\x1dla\x07\x08\xacFA\xf4\xe4" +
	"\x04\xf9l\xb3J*t\x85b\xf3\xc6\x04\x80V\xca\x81" +
	"\xbc\x16){i\xd8=\xd9(\xb1\xdf\x97\x8d;\xf5\x16" +
	"\x07\xff\xc7\x09+RS.\x0c\xfe\xf9\xa2\xfa\x95\x8b\xa8" +
	"\xcf\x16\x1cGN\xcan\x95\xbcGjB\x95|\x93\xd3" +
	"\xe3@r\x89v[\xb3\xa9\xd9\xb9^w\x13\x00\x0al" +
	"\xfe\"\x00\x14Ye\x1b\x00J\xac\xa2\x19 \xe4\xa2\x09" +
	"\x9aCf\xb4\xcaL\xa5\xac\xd4H\xda%)\xe4\xf2[" +
	"\xa2C\x8b\xc8\\\x91\x0e\xfdo\x19\x9d\xa0,n\xf2S" +
	"\x89\xf8\x941\x0a\xfb\xb7\xc7\xa1\x87\x14\"\xd7\xbdW\x9e" +
	"\xbe\xb6|r4}+}BPr\xf4\xff\x86\x10\xbb" +
	"\xcc\x02\xfc#\"&Mf\xe9@|\x94\"\x9c\xbd\x7f" +
	"%\xa1S\x04,1\x88d\xa5\xc4K\xbe\x04\xedF\xbc" +
	"\xca1#\xfag;\xe2\xc1\xf7@\xe4\xeb\x05{\xf5\x10" +
	"\x08\xec0\x89\x07_t\x91\xef\x9c\xec\xd9\x01\x10\xd8>" +
	"\x05\x05oSB\xbe\xca\xb01:\xdb\xaa\xa0\xe8\xedt" +
	"\xc8\x17\x136\x9c\x02\x81\xadWP\xf2v0\xe4K2" +
	"3I\x90\xeeUP\xf6\xb6c\xe4\xcb%\xd3\xc9gX" +
	"\xb19E\xc89\x0a\x12I\xadh\xf3w\x10\x82\xf4\x12" +
	"z\x1fz2\x10\xa4\xba\xb5:\x9d\xe1\x10\x04U\x0eE" +
	"\xee\x17g\xca\x00{\xdd\x7fN\xe1 H\x12|%\xf1" +
	"+^d^(\xff\x8ct\xfbt'\x9aSw\xc0^" +
	"\xfe\xb8\xff\x15\x00\x00\xff\xfff\xeb\x9e\xa2"

func RegisterSchema(reg *schemas.Registry) {
	reg.Register(&schemas.Schema{
		String: schema_95f578ba422c9f4b,
		Nodes: []uint64{
			0x8bad13242cde8e8d,
			0x911e8dcfa580e88c,
			0x9494e8df9f2cda43,
			0x95c1bdfdc8d9f754,
			0x9b9e780efafe194e,
			0xa0d35e4b87addf30,
			0xaa0ee165a52f6470,
			0xaad200693eb98c29,
			0xb455a37922042f8c,
			0xc1e385c430bc6e79,
			0xc93be09c845920bb,
			0xcf6ba69f4bd802b7,
			0xd50c63d1b6357bcc,
			0xd6910ec654e223ae,
			0xdb89eb8468ea99dc,
			0xe2e6c1da8c8efa05,
			0xe566fb9c508f20be,
			0xe5f8361c6b6e4977,
			0xf6ee3da5514b2780,
			0xf997d7817d5e8d4e,
			0xfa5237658bb0489b,
			0xfc059c3f3d95cc04,
			0xfdfefe331d29867c,
		},
		Compressed: true,
	})
}
